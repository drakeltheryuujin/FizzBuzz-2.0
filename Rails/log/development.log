Started GET "/api/v1/users" for ::1 at 2016-08-18 17:21:12 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

	bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.0.0.1) lib/active_record/migration.rb:572:in `check_pending!'
activerecord (5.0.0.1) lib/active_record/migration.rb:548:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:21:17 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

	bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.0.0.1) lib/active_record/migration.rb:572:in `check_pending!'
activerecord (5.0.0.1) lib/active_record/migration.rb:548:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/callbacks.rb:38:in `block in call'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:97:in `__run_callbacks__'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:750:in `_run_call_callbacks'
activesupport (5.0.0.1) lib/active_support/callbacks.rb:90:in `run_callbacks'
actionpack (5.0.0.1) lib/action_dispatch/middleware/callbacks.rb:36:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:49:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (145.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_development"[0m
  [1m[35m (149.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_test"[0m
  [1m[35m (18.9ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (9.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4881866303549157300);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160812153226)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.4ms)[0m  [1m[35mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying, "last_name" character varying, "hometown" character varying, "password_digest" character varying, "tagline" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812153226"]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGames (20160812154940)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.0ms)[0m  [1m[35mCREATE TABLE "games" ("id" serial primary key, "board_id" integer, "user_id" integer, "final_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (2.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812154940"]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateBoards (20160812155446)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (10.6ms)[0m  [1m[35mCREATE TABLE "boards" ("id" serial primary key, "topic" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155446"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCategories (20160812155534)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (10.4ms)[0m  [1m[35mCREATE TABLE "categories" ("id" serial primary key, "board_id" integer, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155534"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateQuestions (20160812155559)
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.4ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "category_id" integer, "difficulty" integer, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155559"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20160812155644)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (10.9ms)[0m  [1m[35mCREATE TABLE "options" ("id" serial primary key, "question_id" integer, "correct" boolean, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155644"]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddActiveToQuestions (20160816140611)
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (24.2ms)[0m  [1m[35mALTER TABLE "questions" ADD "active" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160816140611"]]
  [1m[35m (3.9ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddColumn (20160817151549)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "username" character varying[0m
  [1m[35mSQL (2.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817151549"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveColumn (20160817153321)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.8ms)[0m  [1m[35mALTER TABLE "users" DROP "first_name"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153321"]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveLastNameFromUsers (20160817153341)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "users" DROP "last_name"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153341"]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddUsernameToEmail (20160817154932)
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817154932"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGameOptions (20160817202356)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "game_options" ("id" serial primary key, "game_id" integer, "option_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817202356"]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOpenOptions (20160817214017)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (10.7ms)[0m  [1m[35mCREATE TABLE "open_options" ("id" serial primary key, "correct_answer" character varying, "question_id" integer, "open" boolean DEFAULT 't', "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817214017"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddLanguageToOpenOptions (20160817225754)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "open_options" ADD "language" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817225754"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddCorrectToGameOptions (20160818174517)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "game_options" ADD "correct" boolean[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174517"]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddErrorToGameOptions (20160818174702)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.6ms)[0m  [1m[35mALTER TABLE "game_options" ADD "error" text[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174702"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", :environment], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-08-18 21:21:45 UTC], ["updated_at", 2016-08-18 21:21:45 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4881866303549157300)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'boards'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'categories'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'game_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'games'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.8ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'open_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.8ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.6ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Simple Expressions"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Loops & Conditionals"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", " Methods & Hashes"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Ruby Questions"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Object Oriented Programming"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-18 21:21:51 UTC], ["updated_at", 2016-08-18 21:21:51 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 1]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 2]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 3]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 4]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 5]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "boards" WHERE "boards"."id" = $1[0m  [["id", 6]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "categories" WHERE "categories"."id" = $1[0m  [["id", 1]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "categories" WHERE "categories"."id" = $1[0m  [["id", 2]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "categories" WHERE "categories"."id" = $1[0m  [["id", 3]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "categories" WHERE "categories"."id" = $1[0m  [["id", 4]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "categories" WHERE "categories"."id" = $1[0m  [["id", 5]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 1]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 2]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 3]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 4]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 5]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 6]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 7]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 8]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 9]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 10]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 11]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 12]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 13]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 14]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 15]]
  [1m[35m (2.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 16]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 17]]
  [1m[35m (3.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 18]]
  [1m[35m (3.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 19]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 20]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 21]]
  [1m[35m (2.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 22]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 23]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 24]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = $1[0m  [["id", 25]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-18 21:22:43 UTC], ["updated_at", 2016-08-18 21:22:43 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-18 21:22:43 UTC], ["updated_at", 2016-08-18 21:22:43 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-18 21:22:43 UTC], ["updated_at", 2016-08-18 21:22:43 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 7], ["name", "Simple Expressions"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 7], ["name", "Loops & Conditionals"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 7], ["name", " Methods & Hashes"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 7], ["name", "Ruby Questions"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 7], ["name", "Object Oriented Programming"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 6], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 6], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 6], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 6], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 6], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 7], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 7], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 7], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 7], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 7], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 8], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 8], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 8], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 8], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 8], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 9], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 9], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 9], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 9], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 9], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 10], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 10], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 10], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 10], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 10], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("hometown", "password_digest", "tagline", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["hometown", "philly"], ["password_digest", "flatiron"], ["tagline", "working"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC], ["email", "flatiron"]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 7], ["user_id", 1], ["final_score", 1000], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 27], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 27], ["correct", true], ["content", "xy"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 27], ["correct", false], ["content", "[3, 5]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 27], ["correct", false], ["content", "8"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 28], ["correct", true], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 3"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 28], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 28], ["correct", false], ["content", "a = 1\n                                                                            b = nil\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 28], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 4"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 29], ["correct", true], ["content", "Otto Mation"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 29], ["correct", false], ["content", "OttoMation"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 29], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 29], ["correct", false], ["content", "Otto + Mation"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 30], ["correct", false], ["content", "[\"temp\"]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 30], ["correct", false], ["content", "temp"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 30], ["correct", false], ["content", "@temp]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 30], ["correct", true], ["content", "[:@temp]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 31], ["correct", false], ["content", "unicorn"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 31], ["correct", true], ["content", "nrocinu"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 31], ["correct", false], ["content", "nrocinU"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 31], ["correct", false], ["content", "Nrocinu"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 32], ["correct", false], ["content", "arr[-1]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 32], ["correct", true], ["content", "arr[2]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 32], ["correct", false], ["content", "arr[3]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 32], ["correct", false], ["content", "arr[\"biggie\"]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 33], ["correct", false], ["content", "result = []\n                                                                              colors.each_with_index do |color, index|\n                                                                                result << [\"color\", \"index\"  + 1]\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 33], ["correct", false], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index] + 1\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 33], ["correct", false], ["content", "result = []\n                                                                              colors.each do |color, index|\n                                                                                result << [color, index  + 1]\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 33], ["correct", true], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index + 1]\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 34], ["correct", false], ["content", "days.values_at(0, 3)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 34], ["correct", true], ["content", "days.select.with_index do |_, index|\n                                                                                [0, 2].include? index\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 34], ["correct", false], ["content", "days.select.each_with_index do |_, index|\n                                                                                  [0, 2].include? index\n                                                                                end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 34], ["correct", false], ["content", "days.values(0, 2)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 35], ["correct", false], ["content", "begin\n                                                                              begin\n                                                                              begin"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 35], ["correct", false], ["content", "begio\n                                                                              begip\n                                                                              begiq"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 35], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 35], ["correct", true], ["content", "begin\n                                                                              begio\n                                                                              begip"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 36], ["correct", false], ["content", "lebron.keys"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 36], ["correct", false], ["content", "lebron.values()"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 36], ["correct", true], ["content", "lebron.keys()"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 36], ["correct", false], ["content", "lebron.keys.all"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 37], ["correct", false], ["content", "lebron.push({:high_school => \"St. Vincent-St. Mary High School\"})"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 37], ["correct", false], ["content", "lebron(\"high_school\", \"St. Vincent-St. Mary High School\")"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 37], ["correct", false], ["content", "lebron[:high_school].to_h(St. Vincent-St. Mary High School)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 37], ["correct", true], ["content", "lebron[:high_school] = \"St. Vincent-St. Mary High School\""], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 38], ["correct", true], ["content", ":firefox"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 38], ["correct", false], ["content", ":chrome"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 38], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 38], ["correct", false], ["content", "[:chrome, :favorite]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 39], ["correct", false], ["content", "dude.values.sum(1) do |product, number|\n                                                                              product *= number\n                                                                              product\n                                                                            end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 39], ["correct", true], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 39], ["correct", false], ["content", "dude.values.include do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 39], ["correct", false], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product * number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 40], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (4.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 40], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [@greeting, @name]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 40], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [\"@greeting\", \"@name\"]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 40], ["correct", true], ["content", "[]\n                                                                              \"***\"\n                                                                              [:@greeting, :@name]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 41], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = 3\n                                                                               d = 4"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 41], ["correct", true], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = 5"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 41], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = nil\n                                                                               d = 3"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 41], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = nil"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 42], ["correct", false], ["content", "Instance variable"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 42], ["correct", false], ["content", "Global variable"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 42], ["correct", true], ["content", "Class variable"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 42], ["correct", false], ["content", "None of the above"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 43], ["correct", true], ["content", "[10, 30, 50, 70, 90]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 43], ["correct", false], ["content", "[20, 40, 60, 80, 100]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 43], ["correct", true], ["content", "10, 30, 50, 70, 90"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 43], ["correct", false], ["content", "[\"10\", \"30\", \"50\", \"70\", \"90\"]"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 45], ["correct", false], ["content", "TypeError: no implicit conversion of String into Integer"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 45], ["correct", false], ["content", "NameError: undefined local variable or method `lambda' for main:Object"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 45], ["correct", true], ["content", "ArgumentError: wrong number of arguments (3 for 2)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 45], ["correct", false], ["content", "ArgumentError: wrong number of arguments (2 for 1)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 44], ["correct", false], ["content", "biscuits biscuits biscuits"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 44], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 44], ["correct", false], ["content", "thang"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 44], ["correct", true], ["content", "biscuits"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 46], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 46], ["correct", false], ["content", "class Celsius\n                                                                                def init(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 46], ["correct", true], ["content", "class Celsius\n                                                                                def initialize(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 46], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature = @temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 47], ["correct", false], ["content", "class Calculator\n                                                                                  def self.add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                end\n                                                                                puts Calculator(3, 4)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 47], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  x + y\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 47], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 47], ["correct", true], ["content", "class Calculator\n                                                                                def self.add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 48], ["correct", true], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(:name)\n                                                                                  @age = args.fetch(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 48], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args(:name)\n                                                                                  @age = args(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 48], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(name)\n                                                                                  @age = args.fetch(age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (5.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 48], ["correct", false], ["content", "class Person\n                                                                                  def initialize(args)\n                                                                                    @name = args.fetch(:name)\n                                                                                    @age = args.fetch(:age)\n                                                                                  end\n                                                                                end\n\n                                                                                class Yankees\n                                                                                  def captain\n                                                                                    Person.new(\"Jeter\", 39)\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 49], ["correct", false], ["content", "hi cat"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 49], ["correct", false], ["content", "error)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 49], ["correct", true], ["content", "cat"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 49], ["correct", false], ["content", "nil"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 50], ["correct", false], ["content", "nil"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 50], ["correct", true], ["content", "error)"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 50], ["correct", false], ["content", "oink!"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 50], ["correct", false], ["content", "#Pig:0x007ff24ab73d58"], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "open_options" ("correct_answer", "question_id", "created_at", "updated_at", "language") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["correct_answer", "6"], ["question_id", 26], ["created_at", 2016-08-18 21:22:44 UTC], ["updated_at", 2016-08-18 21:22:44 UTC], ["language", "JS"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/questions/51" for ::1 at 2016-08-18 17:27:57 -0400
Started GET "/api/v1/boards/13" for ::1 at 2016-08-18 17:27:57 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (3.1ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"13"}
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"51"}
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
Completed 404 Not Found in 28ms (ActiveRecord: 7.3ms)


  
ActiveRecord::RecordNotFound (Couldn't find Board with 'id'=13):
  
app/services/populate_board.rb:7:in `initiate'
app/controllers/api/v1/boards_controller.rb:12:in `show'
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
Completed 404 Not Found in 77ms (ActiveRecord: 6.3ms)


  
ActiveRecord::RecordNotFound (Couldn't find Question with 'id'=51):
  
app/controllers/api/v1/questions_controller.rb:6:in `show'
Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:28:20 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
Completed 404 Not Found in 7ms (ActiveRecord: 2.0ms)


Started GET "/api/v1/boards/13" for ::1 at 2016-08-18 17:29:25 -0400
Started GET "/api/v1/questions/51" for ::1 at 2016-08-18 17:29:25 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"13"}
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"51"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 51], ["LIMIT", 1]]
Completed 404 Not Found in 34ms (ActiveRecord: 8.5ms)


  [1m[36mBoard Load (1.2ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
Completed 404 Not Found in 37ms (ActiveRecord: 12.4ms)


  
  
ActiveRecord::RecordNotFound (Couldn't find Question with 'id'=51):
  
ActiveRecord::RecordNotFound (Couldn't find Board with 'id'=13):
app/controllers/api/v1/questions_controller.rb:6:in `show'
  
app/services/populate_board.rb:7:in `initiate'
app/controllers/api/v1/boards_controller.rb:12:in `show'
Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:29:42 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
Started POST "/api/v1/users" for ::1 at 2016-08-18 17:29:42 -0400
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"kevin", "password"=>"[FILTERED]", "user"=>{"email"=>"kevin"}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
Completed 404 Not Found in 13ms (ActiveRecord: 3.4ms)


  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$LTVSxnl5wYguzn7BoVlmHeGidGao2ldPst.dhB/xdAMnJd023DbKm"], ["created_at", 2016-08-18 21:29:42 UTC], ["updated_at", 2016-08-18 21:29:42 UTC], ["email", "kevin"]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 96ms (ActiveRecord: 7.3ms)


Started POST "/api/v1/users" for ::1 at 2016-08-18 17:29:45 -0400
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"kevin", "password"=>"[FILTERED]", "user"=>{"email"=>"kevin"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:29:45 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$MQ8sGzColE.PJA/EL63aYeHM/Zo6GNoc5PygVCaG2I65we6WsJvOm"], ["created_at", 2016-08-18 21:29:45 UTC], ["updated_at", 2016-08-18 21:29:45 UTC], ["email", "kevin"]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
  [1m[35m (80.0ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 164ms (ActiveRecord: 82.0ms)


[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.19ms)
Completed 201 Created in 93ms (Views: 6.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:29:46 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.4ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.24ms)
Completed 200 OK in 32ms (Views: 2.5ms | ActiveRecord: 1.4ms)


Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:29:56 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.18ms)
Completed 201 Created in 82ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:29:56 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.0ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.17ms)
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/users" for ::1 at 2016-08-18 17:30:12 -0400
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"new", "password"=>"[FILTERED]", "user"=>{"email"=>"new"}}
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:30:12 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"new", "password"=>"[FILTERED]"}}
  [1m[35mSQL (2.3ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$p6X7mJxrfgFNixSVVqKbhO0otjHLEnf5J2zN9ShwymPQHEz9Zyy4m"], ["created_at", 2016-08-18 21:30:12 UTC], ["updated_at", 2016-08-18 21:30:12 UTC], ["email", "new"]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "new"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.6ms)


  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 87ms (ActiveRecord: 4.9ms)


Started POST "/api/v1/users" for ::1 at 2016-08-18 17:30:18 -0400
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"new", "password"=>"[FILTERED]", "user"=>{"email"=>"new"}}
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:30:18 -0400
Processing by Knock::AuthTokenController#create as */*
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$QrKp5k6EatjlQOschJGevuASSRaG/LWTf2Jk4JF.N7FGAUb5X5am6"], ["created_at", 2016-08-18 21:30:18 UTC], ["updated_at", 2016-08-18 21:30:18 UTC], ["email", "new"]]
  Parameters: {"auth"=>{"email"=>"new", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "new"], ["LIMIT", 1]]
  [1m[35m (82.5ms)[0m  [1m[35mCOMMIT[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.12ms)
Completed 204 No Content in 168ms (ActiveRecord: 84.5ms)


Completed 201 Created in 84ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:30:18 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.21ms)
Completed 200 OK in 5ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/boards/7" for ::1 at 2016-08-18 17:30:36 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"7"}
  [1m[36mBoard Load (1.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 7]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 6]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 7]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 8]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 9]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 10]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (5.82ms)
Completed 200 OK in 89ms (Views: 6.2ms | ActiveRecord: 8.7ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-08-18 17:30:39 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (32.32ms)
Completed 200 OK in 63ms (Views: 52.1ms | ActiveRecord: 9.2ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-08-18 17:30:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (18.79ms)
Completed 200 OK in 21ms (Views: 15.7ms | ActiveRecord: 4.0ms)


Started GET "/api/v1/questions/38" for ::1 at 2016-08-18 17:30:51 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"38"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 38], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 38]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 38]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.66ms)
Completed 200 OK in 9ms (Views: 6.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/34" for ::1 at 2016-08-18 17:30:55 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"34"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 34], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 34]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 34]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.49ms)
Completed 200 OK in 10ms (Views: 6.9ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/questions/32" for ::1 at 2016-08-18 17:30:59 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"32"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 32], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 32]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.78ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/41" for ::1 at 2016-08-18 17:31:07 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"41"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 41], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 41]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 41]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.26ms)
Completed 200 OK in 11ms (Views: 7.0ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/game_options/" for ::1 at 2016-08-18 17:31:10 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"userId"=>1, "optionIds"=>{"options"=>[{"correct"=>false, "userId"=>1, "error"=>nil}, {"correct"=>true, "userId"=>1, "error"=>nil}, {"correct"=>false, "userId"=>1, "error"=>nil}, {"correct"=>false, "userId"=>1, "error"=>nil}]}, "game_option"=>{}}
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "games" ("user_id", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["user_id", 1], ["created_at", 2016-08-18 21:31:10 UTC], ["updated_at", 2016-08-18 21:31:10 UTC]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 2], ["created_at", 2016-08-18 21:31:10 UTC], ["updated_at", 2016-08-18 21:31:10 UTC], ["correct", false]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 2], ["created_at", 2016-08-18 21:31:10 UTC], ["updated_at", 2016-08-18 21:31:10 UTC], ["correct", true]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 2], ["created_at", 2016-08-18 21:31:10 UTC], ["updated_at", 2016-08-18 21:31:10 UTC], ["correct", false]]
  [1m[35m (2.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 2], ["created_at", 2016-08-18 21:31:10 UTC], ["updated_at", 2016-08-18 21:31:10 UTC], ["correct", false]]
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 57ms (ActiveRecord: 26.5ms)


Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:31:33 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.2ms)
Completed 201 Created in 79ms (Views: 0.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:31:33 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.3ms)
Completed 200 OK in 5ms (Views: 1.1ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/boards/7" for ::1 at 2016-08-18 17:31:40 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"7"}
  [1m[36mBoard Load (0.8ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 7]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 6]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 7]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 8]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 9]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 10]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (15.73ms)
Completed 200 OK in 40ms (Views: 16.2ms | ActiveRecord: 3.6ms)


Started GET "/api/v1/questions/26" for ::1 at 2016-08-18 17:31:41 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"26"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 26], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 26]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (5.77ms)
Completed 200 OK in 8ms (Views: 5.7ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-08-18 17:32:38 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.6ms)
Completed 200 OK in 10ms (Views: 7.2ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/questions/27" for ::1 at 2016-08-18 17:33:01 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"27"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 27], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 27]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.07ms)
Completed 200 OK in 11ms (Views: 8.0ms | ActiveRecord: 1.5ms)


Started POST "/knock/auth_token" for ::1 at 2016-08-18 17:33:10 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"kevin", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "kevin"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.11ms)
Completed 201 Created in 82ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/boards" for ::1 at 2016-08-18 17:33:10 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (3.2ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.22ms)
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 3.2ms)


Started GET "/api/v1/boards/7" for ::1 at 2016-08-18 17:33:12 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"7"}
  [1m[36mBoard Load (1.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
  [1m[36mCategory Load (1.0ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 7]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 6]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 7]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 8]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 9]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 10]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.6ms)
Completed 200 OK in 34ms (Views: 8.2ms | ActiveRecord: 5.8ms)


Started GET "/api/v1/questions/31" for ::1 at 2016-08-18 17:33:15 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"31"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 31], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 31]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.85ms)
Completed 200 OK in 10ms (Views: 6.8ms | ActiveRecord: 1.2ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (120.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_development"[0m
  [1m[35m (121.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_test"[0m
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4881866303549157300);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160812153226)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying, "last_name" character varying, "hometown" character varying, "password_digest" character varying, "tagline" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812153226"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGames (20160812154940)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "games" ("id" serial primary key, "board_id" integer, "user_id" integer, "final_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812154940"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateBoards (20160812155446)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "boards" ("id" serial primary key, "topic" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155446"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCategories (20160812155534)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "categories" ("id" serial primary key, "board_id" integer, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155534"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateQuestions (20160812155559)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "category_id" integer, "difficulty" integer, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155559"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20160812155644)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (13.3ms)[0m  [1m[35mCREATE TABLE "options" ("id" serial primary key, "question_id" integer, "correct" boolean, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155644"]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddActiveToQuestions (20160816140611)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (12.3ms)[0m  [1m[35mALTER TABLE "questions" ADD "active" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160816140611"]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGameOptions (20160817202356)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "game_options" ("id" serial primary key, "game_id" integer, "option_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817202356"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOpenOptions (20160817214017)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "open_options" ("id" serial primary key, "correct_answer" character varying, "question_id" integer, "open" boolean DEFAULT 't', "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817214017"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddLanguageToOpenOptions (20160817225754)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "open_options" ADD "language" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817225754"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", :environment], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-08-18 18:26:59 UTC], ["updated_at", 2016-08-18 18:26:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4881866303549157300)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.0ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'boards'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'categories'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'game_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'games'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'open_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.8ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Simple Expressions"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Loops & Conditionals"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", " Methods & Hashes"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Ruby Questions"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Object Oriented Programming"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("first_name", "last_name", "hometown", "password_digest", "tagline", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING "id"[0m  [["first_name", "flat"], ["last_name", "iron"], ["hometown", "philly"], ["password_digest", "flatiron"], ["tagline", "working"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 1000], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", true], ["content", "xy"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "[3, 5]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "8"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", true], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 3"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = nil\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 4"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", true], ["content", "Otto Mation"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "OttoMation"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "Otto + Mation"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "[\"temp\"]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "temp"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "@temp]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", true], ["content", "[:@temp]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "unicorn"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", true], ["content", "nrocinu"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "nrocinU"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "Nrocinu"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[-1]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", true], ["content", "arr[2]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[3]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[\"biggie\"]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each_with_index do |color, index|\n                                                                                result << [\"color\", \"index\"  + 1]\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index] + 1\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each do |color, index|\n                                                                                result << [color, index  + 1]\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", true], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index + 1]\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values_at(0, 3)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", true], ["content", "days.select.with_index do |_, index|\n                                                                                [0, 2].include? index\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.select.each_with_index do |_, index|\n                                                                                  [0, 2].include? index\n                                                                                end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values(0, 2)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begin\n                                                                              begin\n                                                                              begin"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begio\n                                                                              begip\n                                                                              begiq"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", true], ["content", "begin\n                                                                              begio\n                                                                              begip"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.values()"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", true], ["content", "lebron.keys()"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys.all"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron.push({:high_school => \"St. Vincent-St. Mary High School\"})"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron(\"high_school\", \"St. Vincent-St. Mary High School\")"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron[:high_school].to_h(St. Vincent-St. Mary High School)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", true], ["content", "lebron[:high_school] = \"St. Vincent-St. Mary High School\""], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", true], ["content", ":firefox"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", ":chrome"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "[:chrome, :favorite]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.sum(1) do |product, number|\n                                                                              product *= number\n                                                                              product\n                                                                            end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", true], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.include do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product * number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [@greeting, @name]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [\"@greeting\", \"@name\"]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", true], ["content", "[]\n                                                                              \"***\"\n                                                                              [:@greeting, :@name]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = 3\n                                                                               d = 4"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", true], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = 5"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = nil\n                                                                               d = 3"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = nil"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Instance variable"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Global variable"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", true], ["content", "Class variable"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "None of the above"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "[10, 30, 50, 70, 90]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[20, 40, 60, 80, 100]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "10, 30, 50, 70, 90"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[\"10\", \"30\", \"50\", \"70\", \"90\"]"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "TypeError: no implicit conversion of String into Integer"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "NameError: undefined local variable or method `lambda' for main:Object"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", true], ["content", "ArgumentError: wrong number of arguments (3 for 2)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "ArgumentError: wrong number of arguments (2 for 1)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "biscuits biscuits biscuits"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "error"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "thang"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", true], ["content", "biscuits"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                def init(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", true], ["content", "class Celsius\n                                                                                def initialize(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature = @temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                  def self.add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                end\n                                                                                puts Calculator(3, 4)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  x + y\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", true], ["content", "class Calculator\n                                                                                def self.add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", true], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(:name)\n                                                                                  @age = args.fetch(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args(:name)\n                                                                                  @age = args(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(name)\n                                                                                  @age = args.fetch(age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                  def initialize(args)\n                                                                                    @name = args.fetch(:name)\n                                                                                    @age = args.fetch(:age)\n                                                                                  end\n                                                                                end\n\n                                                                                class Yankees\n                                                                                  def captain\n                                                                                    Person.new(\"Jeter\", 39)\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "hi cat"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "error)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", true], ["content", "cat"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "nil"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "nil"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", true], ["content", "error)"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "oink!"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "#Pig:0x007ff24ab73d58"], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "open_options" ("correct_answer", "question_id", "created_at", "updated_at", "language") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["correct_answer", "6"], ["question_id", 1], ["created_at", 2016-08-18 18:27:05 UTC], ["updated_at", 2016-08-18 18:27:05 UTC], ["language", "RUBY"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 14:27:32 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.8ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.42ms)
Completed 200 OK in 48ms (Views: 6.0ms | ActiveRecord: 8.6ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 14:27:42 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.6ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.2ms)
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:27:47 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.9ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.64ms)
Completed 200 OK in 161ms (Views: 9.2ms | ActiveRecord: 16.3ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 14:27:51 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (36.74ms)
Completed 200 OK in 63ms (Views: 48.8ms | ActiveRecord: 10.0ms)


Started PATCH "/api/v1/open_options/asses" for 85.65.216.172 at 2016-08-18 14:28:31 -0400
  
ActionController::RoutingError (No route matches [PATCH] "/api/v1/open_options/asses"):
  
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:29:53 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.9ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.16ms)
Completed 200 OK in 33ms (Views: 8.7ms | ActiveRecord: 4.9ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:29:57 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (1.0ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (12.98ms)
Completed 200 OK in 47ms (Views: 14.1ms | ActiveRecord: 10.4ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 14:30:10 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.24ms)
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:30:11 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (2.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (43.02ms)
Completed 200 OK in 77ms (Views: 43.9ms | ActiveRecord: 7.9ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 14:30:13 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (3.0ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (9.46ms)
Completed 200 OK in 13ms (Views: 6.5ms | ActiveRecord: 4.7ms)


Started POST "/api/v1/open_options/asses" for 85.65.216.172 at 2016-08-18 14:30:21 -0400
  
ActionController::RoutingError (No route matches [POST] "/api/v1/open_options/asses"):
  
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:31:45 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.67ms)
Completed 200 OK in 91ms (Views: 9.6ms | ActiveRecord: 21.4ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 14:31:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (39.88ms)
Completed 200 OK in 45ms (Views: 34.1ms | ActiveRecord: 8.8ms)


Started POST "/api/v1/open_options/asses" for 85.65.216.172 at 2016-08-18 14:31:53 -0400
  
ActionController::RoutingError (No route matches [POST] "/api/v1/open_options/asses"):
  
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started POST "/api/v1/open_options/asses" for ::1 at 2016-08-18 14:32:05 -0400
  
ActionController::RoutingError (No route matches [POST] "/api/v1/open_options/asses"):
  
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started POST "/api/v1/open_options/asses" for ::1 at 2016-08-18 14:32:31 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  
ActionController::RoutingError (No route matches [POST] "/api/v1/open_options/asses"):
  
actionpack (5.0.0.1) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.0.0.1) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `block in tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.0.0.1) lib/active_support/tagged_logging.rb:70:in `tagged'
railties (5.0.0.1) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/request_id.rb:24:in `call'
rack (2.0.1) lib/rack/runtime.rb:22:in `call'
activesupport (5.0.0.1) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.0.0.1) lib/action_dispatch/middleware/static.rb:136:in `call'
rack (2.0.1) lib/rack/sendfile.rb:111:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
rack-cors (0.4.0) lib/rack/cors.rb:80:in `call'
railties (5.0.0.1) lib/rails/engine.rb:522:in `call'
puma (3.6.0) lib/puma/configuration.rb:225:in `call'
puma (3.6.0) lib/puma/server.rb:578:in `handle_request'
puma (3.6.0) lib/puma/server.rb:415:in `process_client'
puma (3.6.0) lib/puma/server.rb:275:in `block in run'
puma (3.6.0) lib/puma/thread_pool.rb:116:in `block in spawn_thread'
Started POST "/api/v1/assesOpenOption" for ::1 at 2016-08-18 14:33:24 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
Completed 204 No Content in 57323ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:34:21 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (1.7ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (6.72ms)
Completed 200 OK in 167ms (Views: 11.8ms | ActiveRecord: 30.8ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 14:34:36 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (4.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.09ms)
Completed 200 OK in 113ms (Views: 9.7ms | ActiveRecord: 25.7ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 14:34:40 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (48.43ms)
Completed 200 OK in 74ms (Views: 58.6ms | ActiveRecord: 12.5ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 14:34:47 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6*6", "open_option"=>{}}
Completed 204 No Content in 61812ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 15:02:19 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.28ms)
Completed 200 OK in 19ms (Views: 2.2ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:02:20 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (1.0ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (20.0ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.8ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (13.22ms)
Completed 200 OK in 178ms (Views: 14.0ms | ActiveRecord: 49.6ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:02:21 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.2ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (120.89ms)
Completed 200 OK in 128ms (Views: 108.0ms | ActiveRecord: 17.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:02:27 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"[o9", "open_option"=>{}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Api::V1::OpenOptionsController::AssesOpenOption):
  
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:04:46 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.54ms)
Completed 200 OK in 92ms (Views: 10.6ms | ActiveRecord: 21.3ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:04:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (78.17ms)
Completed 200 OK in 83ms (Views: 44.0ms | ActiveRecord: 37.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:04:51 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"3p][4", "open_option"=>{}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError ((eval):1: syntax error, unexpected tIDENTIFIER, expecting end-of-input
3p][4
  ^):
  
app/services/asses_open_option.rb:7:in `eval'
app/services/asses_open_option.rb:7:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:05:33 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (11.81ms)
Completed 200 OK in 125ms (Views: 14.4ms | ActiveRecord: 22.9ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:05:34 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (96.57ms)
Completed 200 OK in 102ms (Views: 88.7ms | ActiveRecord: 10.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:05:41 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"098k[:", "open_option"=>{}}
Completed 500 Internal Server Error in 400851ms (ActiveRecord: 0.0ms)


  
SyntaxError ((eval):1: Invalid octal digit
098k[:
  ^
(eval):1: syntax error, unexpected tIDENTIFIER, expecting end-of-input
098k[:
    ^):
  
app/services/asses_open_option.rb:7:in `eval'
app/services/asses_open_option.rb:7:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:12:31 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (49.54ms)
Completed 200 OK in 77ms (Views: 38.4ms | ActiveRecord: 19.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:12:35 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"][3", "open_option"=>{}}
Completed 500 Internal Server Error in 9543ms (ActiveRecord: 0.0ms)


  
SyntaxError ((eval):1: syntax error, unexpected ']'):
  
app/services/asses_open_option.rb:7:in `eval'
app/services/asses_open_option.rb:7:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:16:49 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (44.23ms)
Completed 200 OK in 73ms (Views: 36.5ms | ActiveRecord: 14.7ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:16:57 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"[]=-}", "open_option"=>{}}
Completed 500 Internal Server Error in 100556ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/services/asses_open_option.rb:12:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:18:47 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.86ms)
Completed 200 OK in 100ms (Views: 51.8ms | ActiveRecord: 20.0ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:18:52 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>")][", "open_option"=>{}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `bybuge' for AssesOpenOption:Class
Did you mean?  byebug):
  
app/services/asses_open_option.rb:15:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:19:08 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.39ms)
Completed 200 OK in 80ms (Views: 48.0ms | ActiveRecord: 12.7ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:19:11 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"]\\wq", "open_option"=>{}}
Completed 204 No Content in 125865ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:21:23 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.76ms)
Completed 200 OK in 126ms (Views: 10.4ms | ActiveRecord: 26.9ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:21:24 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (3.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (55.13ms)
Completed 200 OK in 64ms (Views: 41.6ms | ActiveRecord: 19.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:21:29 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"][", "open_option"=>{}}
Completed 204 No Content in 25802ms (ActiveRecord: 0.0ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:22:06 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"]]}", "open_option"=>{}}
Completed 204 No Content in 17894ms (ActiveRecord: 2.6ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:22:29 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (42.54ms)
Completed 200 OK in 92ms (Views: 53.1ms | ActiveRecord: 14.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:22:38 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"]\\}", "open_option"=>{}}
Completed 204 No Content in 100983ms (ActiveRecord: 3.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:24:23 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (108.13ms)
Completed 200 OK in 200ms (Views: 116.5ms | ActiveRecord: 36.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:24:26 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "open_option"=>{}}
Completed 204 No Content in 21453ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:24:50 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.2ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.07ms)
Completed 200 OK in 15ms (Views: 8.9ms | ActiveRecord: 3.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:25:00 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"()}0=9", "open_option"=>{}}
Completed 204 No Content in 25461ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:25:27 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (34.83ms)
Completed 200 OK in 59ms (Views: 27.1ms | ActiveRecord: 15.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:25:30 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"][", "open_option"=>{}}
Completed 500 Internal Server Error in 54606ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/services/asses_open_option.rb:17:in `asses'
app/controllers/api/v1/open_options_controller.rb:7:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:26:34 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (52.12ms)
Completed 200 OK in 97ms (Views: 50.5ms | ActiveRecord: 18.4ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:26:38 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"][0", "open_option"=>{}}
Completed 204 No Content in 585078ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:38:05 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (57.67ms)
Completed 200 OK in 105ms (Views: 54.1ms | ActiveRecord: 19.4ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:38:12 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"()=>[]sad", "open_option"=>{}}
Completed 204 No Content in 55462ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:39:10 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.71ms)
Completed 200 OK in 16ms (Views: 8.4ms | ActiveRecord: 5.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:39:46 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def caseCheck(g)\ng*788[\nend", "open_option"=>{}}
Completed 204 No Content in 21247ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:40:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.91ms)
Completed 200 OK in 15ms (Views: 9.2ms | ActiveRecord: 4.5ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:40:16 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"3*2", "open_option"=>{}}
Completed 204 No Content in 0ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:47:45 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (35.24ms)
Completed 200 OK in 72ms (Views: 34.7ms | ActiveRecord: 14.2ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:47:48 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (7.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (8.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (3.0ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (20.57ms)
Completed 200 OK in 32ms (Views: 10.5ms | ActiveRecord: 19.4ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:47:58 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6*7", "open_option"=>{}}
Completed 204 No Content in 17912ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:48:18 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (4.2ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (12.52ms)
Completed 200 OK in 18ms (Views: 8.6ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:48:26 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"-3mkcn0-23-]\n[", "open_option"=>{}}
Completed 204 No Content in 17469ms (ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:49:19 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (44.19ms)
Completed 200 OK in 86ms (Views: 40.5ms | ActiveRecord: 21.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:49:39 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>")(=", "open_option"=>{}}
Completed 200 OK in 4ms (Views: 1.6ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:49:51 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.18ms)
Completed 200 OK in 94ms (Views: 11.0ms | ActiveRecord: 17.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:49:53 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (9.29ms)
Completed 200 OK in 13ms (Views: 8.5ms | ActiveRecord: 3.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:49:59 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"2190)_=", "open_option"=>{}}
Completed 200 OK in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:51:43 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.77ms)
Completed 200 OK in 32ms (Views: 9.3ms | ActiveRecord: 4.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:51:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.9ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.24ms)
Completed 200 OK in 14ms (Views: 7.1ms | ActiveRecord: 5.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:51:49 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"98", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Fixnum (0.07ms)
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:52:06 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (4.9ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (16.4ms)
Completed 200 OK in 22ms (Views: 9.9ms | ActiveRecord: 9.0ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:52:11 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"89732][\\", "open_option"=>{}}
Completed 200 OK in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:52:58 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (39.38ms)
Completed 200 OK in 80ms (Views: 40.4ms | ActiveRecord: 14.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:53:02 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"23-}", "open_option"=>{}}
Completed 200 OK in 36853ms (Views: 6.0ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:53:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (5.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (2.0ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (14.45ms)
Completed 200 OK in 20ms (Views: 7.7ms | ActiveRecord: 10.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:53:50 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (1.0ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (12.46ms)
Completed 200 OK in 126ms (Views: 15.2ms | ActiveRecord: 24.2ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 15:53:59 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.29ms)
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 15:54:01 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.8ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (5.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (14.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (53.11ms)
Completed 200 OK in 101ms (Views: 53.9ms | ActiveRecord: 26.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:54:03 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (8.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.57ms)
Completed 200 OK in 19ms (Views: 6.6ms | ActiveRecord: 10.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:54:12 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"76]}", "open_option"=>{}}
Completed 200 OK in 10402ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:54:31 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.1ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.46ms)
Completed 200 OK in 15ms (Views: 8.2ms | ActiveRecord: 5.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:54:34 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"78", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Fixnum (0.05ms)
Completed 200 OK in 5067ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:54:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (3.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.23ms)
Completed 200 OK in 17ms (Views: 7.2ms | ActiveRecord: 8.4ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:54:55 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"hi", "open_option"=>{}}
Completed 200 OK in 29738ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:55:29 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (9.78ms)
Completed 200 OK in 15ms (Views: 7.1ms | ActiveRecord: 6.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:55:33 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"\"Hi\"", "open_option"=>{}}
Completed 200 OK in 18674ms (Views: 1.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:56:02 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.0ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.04ms)
Completed 200 OK in 11ms (Views: 7.7ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:56:07 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"\"Hello\"", "open_option"=>{}}
Completed 200 OK in 4134ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 15:56:15 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (5.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (10.2ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (16.7ms)
Completed 200 OK in 24ms (Views: 6.4ms | ActiveRecord: 16.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 15:56:39 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"[1,2,3,4].map{|n| n*2}", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::CollectionSerializer with Array (0.19ms)
Completed 200 OK in 14711ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 16:16:46 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.1ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.34ms)
Completed 200 OK in 42ms (Views: 4.9ms | ActiveRecord: 10.8ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 16:16:47 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.7ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.34ms)
Completed 200 OK in 162ms (Views: 10.0ms | ActiveRecord: 23.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:16:49 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (2.1ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (92.26ms)
Completed 200 OK in 119ms (Views: 86.5ms | ActiveRecord: 28.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:17:02 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"90-]", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 13ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `userAssedAnswer' for AssesOpenOption:Class
Did you mean?  userAssedAnswer):
  
app/services/asses_open_option.rb:8:in `rescue in asses'
app/services/asses_open_option.rb:5:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:19:16 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.9ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.15ms)
Completed 200 OK in 103ms (Views: 56.1ms | ActiveRecord: 14.7ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:19:21 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"0-93}", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.17ms)
Completed 200 OK in 28649ms (Views: 9.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 16:21:45 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (11.61ms)
Completed 200 OK in 115ms (Views: 14.3ms | ActiveRecord: 29.5ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:21:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (49.05ms)
Completed 200 OK in 54ms (Views: 38.5ms | ActiveRecord: 13.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:21:50 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.28ms)
Completed 200 OK in 10607ms (Views: 5.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:22:12 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (2.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.82ms)
Completed 200 OK in 15ms (Views: 8.4ms | ActiveRecord: 4.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:22:15 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 61495ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/open_options_controller.rb:8:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:23:25 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.6ms)
Completed 200 OK in 101ms (Views: 48.5ms | ActiveRecord: 22.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:23:28 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 6270ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/controllers/api/v1/open_options_controller.rb:8:in `asses'
Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 16:23:58 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.8ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (194.19ms)
Completed 200 OK in 1132ms (Views: 214.4ms | ActiveRecord: 32.6ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:24:02 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.9ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (286.72ms)
Completed 200 OK in 328ms (Views: 295.4ms | ActiveRecord: 10.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:24:05 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (2.5ms)
Completed 200 OK in 62ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:24:15 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (95.21ms)
Completed 200 OK in 129ms (Views: 104.7ms | ActiveRecord: 2.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:25:25 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n 3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (4.74ms)
Completed 200 OK in 19ms (Views: 13.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:25:36 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (112.88ms)
Completed 200 OK in 167ms (Views: 133.1ms | ActiveRecord: 3.6ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:26:17 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.15ms)
Completed 200 OK in 206819ms (Views: 8.4ms | ActiveRecord: 4.7ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:29:50 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (10.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (93.24ms)
Completed 200 OK in 166ms (Views: 88.7ms | ActiveRecord: 38.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:30:16 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"[1].map{|n| n*6}[0]", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.22ms)
Completed 200 OK in 184945ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:35:57 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.51ms)
Completed 200 OK in 13ms (Views: 6.8ms | ActiveRecord: 3.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:36:06 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"34*[]]", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.14ms)
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:37:15 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (58.99ms)
Completed 200 OK in 108ms (Views: 58.6ms | ActiveRecord: 17.5ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:37:23 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"3*2", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.25ms)
Completed 200 OK in 32933ms (Views: 9.0ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:38:00 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (3.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (3.0ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (13.39ms)
Completed 200 OK in 17ms (Views: 7.8ms | ActiveRecord: 7.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:38:05 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"]-", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.55ms)
Completed 200 OK in 15882ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:38:25 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (3.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (13.22ms)
Completed 200 OK in 17ms (Views: 8.6ms | ActiveRecord: 6.7ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:38:57 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"[1].map{|n| n*6}[0]", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.17ms)
Completed 200 OK in 24256ms (Views: 2.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:39:26 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.04ms)
Completed 200 OK in 15ms (Views: 8.5ms | ActiveRecord: 4.5ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:39:51 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n3+3\nend\n\ntal", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.36ms)
Completed 200 OK in 657102ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:51:32 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (38.45ms)
Completed 200 OK in 81ms (Views: 41.6ms | ActiveRecord: 13.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:51:39 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n  3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 12ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `tal' for AssesOpenOption:Class
Did you mean?  tap):
  
app/services/asses_open_option.rb:20:in `hash_response'
app/services/asses_open_option.rb:13:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:52:23 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (56.66ms)
Completed 200 OK in 80ms (Views: 50.1ms | ActiveRecord: 13.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:52:30 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n  3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 231084ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `tal' for AssesOpenOption:Class
Did you mean?  tap):
  
app/services/asses_open_option.rb:21:in `hash_response'
app/services/asses_open_option.rb:13:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 16:56:34 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (39.24ms)
Completed 200 OK in 79ms (Views: 39.2ms | ActiveRecord: 15.0ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 16:56:46 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 895588ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `tal' for AssesOpenOption:Class
Did you mean?  tap):
  
app/services/asses_open_option.rb:14:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 17:11:51 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (42.43ms)
Completed 200 OK in 88ms (Views: 47.4ms | ActiveRecord: 13.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:12:12 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n  3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 81ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `tal' for AssesOpenOption:Class
Did you mean?  tap):
  
app/services/asses_open_option.rb:13:in `eval'
app/services/asses_open_option.rb:13:in `eval'
app/services/asses_open_option.rb:13:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 17:12:43 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (21.25ms)
Completed 200 OK in 27ms (Views: 21.6ms | ActiveRecord: 3.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:13:15 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n  3+3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 2447300ms (ActiveRecord: 3.9ms)


  
SystemExit (exit):
  
app/services/asses_open_option.rb:14:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 17:54:22 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (44.28ms)
Completed 200 OK in 87ms (Views: 47.0ms | ActiveRecord: 13.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:54:48 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n3*2\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:20: class definition in method body
/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:21: syntax error, unexpected tIDENTIFIER, expecting keyword_end):
  
app/services/asses_open_option.rb:20: class definition in method body
app/services/asses_open_option.rb:21: syntax error, unexpected tIDENTIFIER, expecting keyword_end
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 17:55:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (25.34ms)
Completed 200 OK in 136ms (Views: 21.4ms | ActiveRecord: 11.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:55:51 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:20: class definition in method body):
  
app/services/asses_open_option.rb:20: class definition in method body
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:56:08 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 3.3ms)


  
SyntaxError (/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:20: class definition in method body):
  
app/services/asses_open_option.rb:20: class definition in method body
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 17:57:30 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (56.03ms)
Completed 200 OK in 105ms (Views: 54.3ms | ActiveRecord: 17.5ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 17:57:32 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"\ndef tal\n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.19ms)
Completed 200 OK in 309032ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:02:49 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (43.43ms)
Completed 200 OK in 68ms (Views: 36.1ms | ActiveRecord: 14.7ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:03:08 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n2*4\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 2, expected 1)):
  
app/services/asses_open_option.rb:21:in `create_method'
app/services/asses_open_option.rb:14:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:04:17 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (56.94ms)
Completed 200 OK in 106ms (Views: 55.7ms | ActiveRecord: 16.6ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:04:26 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 2, expected 1)):
  
app/services/asses_open_option.rb:21:in `create_method'
app/services/asses_open_option.rb:14:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:05:04 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (48.05ms)
Completed 200 OK in 95ms (Views: 51.1ms | ActiveRecord: 15.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:05:19 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
TypeError (wrong argument type String (expected Proc/Method)):
  
app/services/asses_open_option.rb:22:in `define_method'
app/services/asses_open_option.rb:22:in `create_method'
app/services/asses_open_option.rb:14:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:05:55 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (48.91ms)
Completed 200 OK in 74ms (Views: 44.0ms | ActiveRecord: 13.1ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:05:57 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:22: syntax error, unexpected tIDENTIFIER, expecting keyword_do or '{' or '('
    self.class.send(:define_method, name, eval block)
                                                    ^):
  
app/services/asses_open_option.rb:22: syntax error, unexpected tIDENTIFIER, expecting keyword_do or '{' or '('
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:08:40 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.51ms)
Completed 200 OK in 108ms (Views: 52.8ms | ActiveRecord: 18.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:08:41 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal 2*3 end", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:23: syntax error, unexpected tIDENTIFIER, expecting keyword_do or '{' or '('
    self.class.send(:define_method, name, eval block)
                                                    ^
/Users/talgoldfus/Desktop/codeProject/Rails/app/services/asses_open_option.rb:43: syntax error, unexpected end-of-input, expecting keyword_end):
  
app/services/asses_open_option.rb:23: syntax error, unexpected tIDENTIFIER, expecting keyword_do or '{' or '('
app/services/asses_open_option.rb:43: syntax error, unexpected end-of-input, expecting keyword_end
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:10:30 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (29.12ms)
Completed 200 OK in 52ms (Views: 23.9ms | ActiveRecord: 12.6ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:10:31 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal 2*3 end", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.19ms)
Completed 200 OK in 118489ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 18:12:30 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (2.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (1.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.28ms)
Completed 200 OK in 16ms (Views: 7.6ms | ActiveRecord: 6.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 18:12:33 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal\n 2*3 \nend", "correcAnswer"=>"6", "open_option"=>{}}
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 19:24:29 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (49.04ms)
Completed 200 OK in 99ms (Views: 49.3ms | ActiveRecord: 16.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 19:24:36 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"def tal \n2*3\nend", "correcAnswer"=>"6", "open_option"=>{}}
Completed 500 Internal Server Error in 963178ms (ActiveRecord: 0.0ms)


  
SystemExit (exit):
  
app/services/asses_open_option.rb:15:in `asses'
app/controllers/api/v1/open_options_controller.rb:6:in `asses'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 19:41:20 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.7ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (50.81ms)
Completed 200 OK in 102ms (Views: 48.6ms | ActiveRecord: 21.3ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 19:41:24 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"2*3", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.14ms)
Completed 200 OK in 17655ms (Views: 6.4ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 19:49:42 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.99ms)
Completed 200 OK in 100ms (Views: 10.1ms | ActiveRecord: 22.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:12:42 -0400
  [1m[36mActiveRecord::SchemaMigration Load (1.0ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.23ms)
Completed 200 OK in 126ms (Views: 13.2ms | ActiveRecord: 22.2ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:12:59 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.28ms)
Completed 201 Created in 78ms (Views: 2.4ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 20:12:59 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (3.9ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.46ms)
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:13:01 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.7ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (3.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (12.47ms)
Completed 200 OK in 118ms (Views: 13.3ms | ActiveRecord: 18.1ms)


Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 20:13:03 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (68.91ms)
Completed 200 OK in 96ms (Views: 74.3ms | ActiveRecord: 16.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 20:13:07 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (25.44ms)
Completed 200 OK in 28ms (Views: 22.4ms | ActiveRecord: 4.3ms)


  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT  "games".* FROM "games" ORDER BY "games"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (124.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_development"[0m
  [1m[35m (120.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_test"[0m
  [1m[35m (7.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (3.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4881866303549157300);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160812153226)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.2ms)[0m  [1m[35mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying, "last_name" character varying, "hometown" character varying, "password_digest" character varying, "tagline" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812153226"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGames (20160812154940)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "games" ("id" serial primary key, "board_id" integer, "user_id" integer, "final_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812154940"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateBoards (20160812155446)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.6ms)[0m  [1m[35mCREATE TABLE "boards" ("id" serial primary key, "topic" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155446"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCategories (20160812155534)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.2ms)[0m  [1m[35mCREATE TABLE "categories" ("id" serial primary key, "board_id" integer, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155534"]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateQuestions (20160812155559)
  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "category_id" integer, "difficulty" integer, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155559"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20160812155644)
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.4ms)[0m  [1m[35mCREATE TABLE "options" ("id" serial primary key, "question_id" integer, "correct" boolean, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155644"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddActiveToQuestions (20160816140611)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (8.8ms)[0m  [1m[35mALTER TABLE "questions" ADD "active" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160816140611"]]
  [1m[35m (1.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddColumn (20160817151549)
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.7ms)[0m  [1m[35mALTER TABLE "users" ADD "username" character varying[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817151549"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveColumn (20160817153321)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "users" DROP "first_name"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153321"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveLastNameFromUsers (20160817153341)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "users" DROP "last_name"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153341"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddUsernameToEmail (20160817154932)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817154932"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGameOptions (20160817202356)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "game_options" ("id" serial primary key, "game_id" integer, "option_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (2.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817202356"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOpenOptions (20160817214017)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "open_options" ("id" serial primary key, "correct_answer" character varying, "question_id" integer, "open" boolean DEFAULT 't', "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817214017"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddLanguageToOpenOptions (20160817225754)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "open_options" ADD "language" character varying[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817225754"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddCorrectToGameOptions (20160818174517)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.6ms)[0m  [1m[35mALTER TABLE "game_options" ADD "correct" boolean[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174517"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddErrorToGameOptions (20160818174702)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.0ms)[0m  [1m[35mALTER TABLE "game_options" ADD "error" text[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174702"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", :environment], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-08-19 00:14:49 UTC], ["updated_at", 2016-08-19 00:14:49 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4881866303549157300)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.3ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'boards'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'categories'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'game_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.2ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'games'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'open_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.4ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.9ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Simple Expressions"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Loops & Conditionals"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", " Methods & Hashes"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Ruby Questions"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Object Oriented Programming"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "users" ("hometown", "password_digest", "tagline", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["hometown", "philly"], ["password_digest", "flatiron"], ["tagline", "working"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC], ["email", "flatiron"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 1000], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", true], ["content", "xy"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "[3, 5]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "8"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", true], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 3"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = nil\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 4"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", true], ["content", "Otto Mation"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "OttoMation"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "Otto + Mation"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "[\"temp\"]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "temp"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "@temp]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", true], ["content", "[:@temp]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "unicorn"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", true], ["content", "nrocinu"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "nrocinU"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "Nrocinu"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[-1]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", true], ["content", "arr[2]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[3]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[\"biggie\"]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each_with_index do |color, index|\n                                                                                result << [\"color\", \"index\"  + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index] + 1\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each do |color, index|\n                                                                                result << [color, index  + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", true], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values_at(0, 3)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", true], ["content", "days.select.with_index do |_, index|\n                                                                                [0, 2].include? index\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.select.each_with_index do |_, index|\n                                                                                  [0, 2].include? index\n                                                                                end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values(0, 2)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begin\n                                                                              begin\n                                                                              begin"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begio\n                                                                              begip\n                                                                              begiq"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", true], ["content", "begin\n                                                                              begio\n                                                                              begip"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.values()"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", true], ["content", "lebron.keys()"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys.all"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron.push({:high_school => \"St. Vincent-St. Mary High School\"})"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron(\"high_school\", \"St. Vincent-St. Mary High School\")"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron[:high_school].to_h(St. Vincent-St. Mary High School)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", true], ["content", "lebron[:high_school] = \"St. Vincent-St. Mary High School\""], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", true], ["content", ":firefox"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", ":chrome"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "[:chrome, :favorite]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.sum(1) do |product, number|\n                                                                              product *= number\n                                                                              product\n                                                                            end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", true], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.include do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product * number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [@greeting, @name]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [\"@greeting\", \"@name\"]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", true], ["content", "[]\n                                                                              \"***\"\n                                                                              [:@greeting, :@name]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = 3\n                                                                               d = 4"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", true], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = 5"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = nil\n                                                                               d = 3"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = nil"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Instance variable"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Global variable"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", true], ["content", "Class variable"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "None of the above"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "[10, 30, 50, 70, 90]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[20, 40, 60, 80, 100]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "10, 30, 50, 70, 90"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[\"10\", \"30\", \"50\", \"70\", \"90\"]"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "TypeError: no implicit conversion of String into Integer"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "NameError: undefined local variable or method `lambda' for main:Object"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", true], ["content", "ArgumentError: wrong number of arguments (3 for 2)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "ArgumentError: wrong number of arguments (2 for 1)"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "biscuits biscuits biscuits"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "thang"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", true], ["content", "biscuits"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                def init(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:14:59 UTC], ["updated_at", 2016-08-19 00:14:59 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", true], ["content", "class Celsius\n                                                                                def initialize(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature = @temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                  def self.add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                end\n                                                                                puts Calculator(3, 4)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  x + y\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", true], ["content", "class Calculator\n                                                                                def self.add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", true], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(:name)\n                                                                                  @age = args.fetch(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args(:name)\n                                                                                  @age = args(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(name)\n                                                                                  @age = args.fetch(age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                  def initialize(args)\n                                                                                    @name = args.fetch(:name)\n                                                                                    @age = args.fetch(:age)\n                                                                                  end\n                                                                                end\n\n                                                                                class Yankees\n                                                                                  def captain\n                                                                                    Person.new(\"Jeter\", 39)\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "hi cat"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "error)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", true], ["content", "cat"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", true], ["content", "error)"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "oink!"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "#Pig:0x007ff24ab73d58"], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "open_options" ("correct_answer", "question_id", "created_at", "updated_at", "language") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["correct_answer", "6"], ["question_id", 1], ["created_at", 2016-08-19 00:15:00 UTC], ["updated_at", 2016-08-19 00:15:00 UTC], ["language", "RUBY"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:31 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 17ms (ActiveRecord: 3.0ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:33 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.4ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:34 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.6ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:35 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.5ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:35 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.4ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:35 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.7ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:42 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 3ms (ActiveRecord: 0.4ms)


Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 20:15:42 -0400
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$MyvdwNBBLUqr9lR5pzBzMOcKombDP7y8mV2ArH2g413WannS9B6Le"], ["created_at", 2016-08-19 00:15:42 UTC], ["updated_at", 2016-08-19 00:15:42 UTC], ["email", "test"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 91ms (ActiveRecord: 7.0ms)


Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 20:15:43 -0400
Processing by Api::V1::UsersController#create as HTML
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:15:43 -0400
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[35m (1.0ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
  [1m[35mSQL (80.9ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$ASSxmRZhUKEsQhbgnE1bxeVwcOZKwt0MSRYFFL7hXx77FeoR1dRui"], ["created_at", 2016-08-19 00:15:43 UTC], ["updated_at", 2016-08-19 00:15:43 UTC], ["email", "test"]]
  [1m[35m (6.6ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 165ms (ActiveRecord: 88.5ms)


[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.14ms)
Completed 201 Created in 100ms (Views: 5.6ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 20:15:43 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.8ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.29ms)
Completed 200 OK in 37ms (Views: 1.3ms | ActiveRecord: 6.1ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:15:44 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (1.2ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (1.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.11ms)
Completed 200 OK in 130ms (Views: 9.6ms | ActiveRecord: 21.9ms)


Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 20:16:06 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (31.01ms)
Completed 200 OK in 43ms (Views: 34.4ms | ActiveRecord: 6.9ms)


Started GET "/api/v1/questions/7" for 85.65.216.172 at 2016-08-18 20:16:19 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers]   [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (24.14ms)
Completed 200 OK in 30ms (Views: 23.2ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/questions/12" for 85.65.216.172 at 2016-08-18 20:16:22 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"12"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 12], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 12]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.63ms)
Completed 200 OK in 9ms (Views: 6.5ms | ActiveRecord: 1.3ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 20:16:24 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>400}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (1.9ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 400], ["created_at", 2016-08-19 00:16:24 UTC], ["updated_at", 2016-08-19 00:16:24 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 2], ["option_id", 2], ["created_at", 2016-08-19 00:16:24 UTC], ["updated_at", 2016-08-19 00:16:24 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 2], ["option_id", 22], ["created_at", 2016-08-19 00:16:24 UTC], ["updated_at", 2016-08-19 00:16:24 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 133ms (ActiveRecord: 26.3ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 20:16:26 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>400}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>41, "correct"=>false, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (6.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (9.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.4ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 400], ["created_at", 2016-08-19 00:16:26 UTC], ["updated_at", 2016-08-19 00:16:26 UTC]]
  [1m[35m (12.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (4.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (9.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (3.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (3.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 2], ["created_at", 2016-08-19 00:16:26 UTC], ["updated_at", 2016-08-19 00:16:26 UTC], ["correct", true]]
  [1m[35m (5.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (4.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (14.8ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 22], ["created_at", 2016-08-19 00:16:26 UTC], ["updated_at", 2016-08-19 00:16:26 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 41], ["created_at", 2016-08-19 00:16:26 UTC], ["updated_at", 2016-08-19 00:16:26 UTC], ["correct", false]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 129ms (ActiveRecord: 84.7ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 20:16:26 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (12.05ms)
Completed 200 OK in 14ms (Views: 10.0ms | ActiveRecord: 2.9ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 20:16:32 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>400}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>41, "correct"=>false, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (1.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 400], ["created_at", 2016-08-19 00:16:32 UTC], ["updated_at", 2016-08-19 00:16:32 UTC]]
  [1m[35m (7.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (5.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.4ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 2], ["created_at", 2016-08-19 00:16:32 UTC], ["updated_at", 2016-08-19 00:16:32 UTC], ["correct", true]]
  [1m[35m (2.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (24.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 22], ["created_at", 2016-08-19 00:16:32 UTC], ["updated_at", 2016-08-19 00:16:32 UTC], ["correct", true]]
  [1m[35m (1.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 41], ["created_at", 2016-08-19 00:16:32 UTC], ["updated_at", 2016-08-19 00:16:32 UTC], ["correct", false]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 109ms (ActiveRecord: 50.6ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 20:16:32 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"2*3", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.09ms)
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 20:18:34 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (2.8ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.68ms)
Completed 200 OK in 18ms (Views: 7.8ms | ActiveRecord: 8.4ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 20:18:41 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"ysdiouf 0", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.15ms)
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/13" for 85.65.216.172 at 2016-08-18 20:18:43 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers]   [1m[36mOpenOption Load (1.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.46ms)
Completed 200 OK in 14ms (Views: 9.2ms | ActiveRecord: 3.7ms)


Started GET "/api/v1/questions/23" for 85.65.216.172 at 2016-08-18 20:18:46 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"23"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 23], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 23]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.31ms)
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/21" for 85.65.216.172 at 2016-08-18 20:18:48 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"21"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 21], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 21]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.38ms)
Completed 200 OK in 10ms (Views: 7.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/25" for 85.65.216.172 at 2016-08-18 20:18:51 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"25"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 25], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers]   [1m[36mOpenOption Load (1.5ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 25]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.8ms)
Completed 200 OK in 11ms (Views: 7.4ms | ActiveRecord: 2.6ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:19:10 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.78ms)
Completed 200 OK in 29ms (Views: 9.3ms | ActiveRecord: 3.7ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:19:14 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.28ms)
Completed 200 OK in 29ms (Views: 8.9ms | ActiveRecord: 3.8ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 20:19:17 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (0.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.39ms)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 1.9ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 20:19:20 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"qwe675", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.18ms)
Completed 200 OK in 8ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:19:28 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.94ms)
Completed 200 OK in 26ms (Views: 8.6ms | ActiveRecord: 3.3ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 20:19:29 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers]   [1m[36mOpenOption Load (2.2ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (8.68ms)
Completed 200 OK in 11ms (Views: 6.1ms | ActiveRecord: 3.8ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 20:19:32 -0400
Processing by Api::V1::OpenOptionsController#asses as HTML
  Parameters: {"userAnswer"=>"}56", "correcAnswer"=>"6", "open_option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.16ms)
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 20:19:35 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (3.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers]   [1m[36mOpenOption Load (1.2ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (10.0ms)
Completed 200 OK in 16ms (Views: 8.9ms | ActiveRecord: 5.7ms)


Started GET "/api/v1/questions/6" for 85.65.216.172 at 2016-08-18 20:19:37 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"6"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 6], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 6]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (15.61ms)
Completed 200 OK in 18ms (Views: 14.7ms | ActiveRecord: 1.8ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 20:19:40 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>400}, "optionsInfo"=>[{"correct"=>false, "error"=>"(eval):1: syntax error, unexpected tSTRING_DEND"}, {"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 400], ["created_at", 2016-08-19 00:19:40 UTC], ["updated_at", 2016-08-19 00:19:40 UTC]]
  [1m[35m (7.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 5], ["created_at", 2016-08-19 00:19:40 UTC], ["updated_at", 2016-08-19 00:19:40 UTC], ["correct", false]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 5], ["option_id", 2], ["created_at", 2016-08-19 00:19:40 UTC], ["updated_at", 2016-08-19 00:19:40 UTC], ["correct", true]]
  [1m[35m (2.9ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 35ms (ActiveRecord: 16.5ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 20:19:41 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>400}, "optionsInfo"=>[{"correct"=>false, "error"=>"(eval):1: syntax error, unexpected tSTRING_DEND"}, {"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>18, "correct"=>true, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (1.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (6.0ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (5.1ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 400], ["created_at", 2016-08-19 00:19:41 UTC], ["updated_at", 2016-08-19 00:19:41 UTC]]
  [1m[35m (2.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (5.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (7.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (8.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["game_id", 6], ["created_at", 2016-08-19 00:19:41 UTC], ["updated_at", 2016-08-19 00:19:41 UTC], ["correct", false]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (4.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 6], ["option_id", 2], ["created_at", 2016-08-19 00:19:41 UTC], ["updated_at", 2016-08-19 00:19:41 UTC], ["correct", true]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 6], ["option_id", 18], ["created_at", 2016-08-19 00:19:41 UTC], ["updated_at", 2016-08-19 00:19:41 UTC], ["correct", true]]
  [1m[35m (1.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 84ms (ActiveRecord: 55.6ms)


Started GET "/api/v1/questions/8" for 85.65.216.172 at 2016-08-18 20:19:41 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"8"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 8], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers]   [1m[36mOpenOption Load (0.6ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 8]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.61ms)
Completed 200 OK in 16ms (Views: 12.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/questions/14" for 85.65.216.172 at 2016-08-18 20:19:45 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mOpenOption Load (1.4ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (11.99ms)
Completed 200 OK in 16ms (Views: 10.7ms | ActiveRecord: 3.6ms)


  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT  "games".* FROM "games" ORDER BY "games"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mGameOption Load (0.7ms)[0m  [1m[34mSELECT  "game_options".* FROM "game_options" ORDER BY "game_options"."id" DESC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mGameOption Load (0.6ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.1ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (1.9ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (3.9ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.5ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.6ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (1.2ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (1.9ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (1.4ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.0ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.4ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (1.9ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (2.3ms)[0m  [1m[34mSELECT "game_options".* FROM "game_options"[0m
  [1m[36mGameOption Load (0.4ms)[0m  [1m[34mSELECT  "game_options".* FROM "game_options" WHERE "game_options"."option_id" = $1 LIMIT $2[0m  [["option_id", 1], ["LIMIT", 1]]
  [1m[36mGameOption Load (3.5ms)[0m  [1m[34mSELECT  "game_options".* FROM "game_options" WHERE "game_options"."option_id" = $1 LIMIT $2[0m  [["option_id", 1], ["LIMIT", 1]]
Started GET "/api/v1/questions/14" for 85.65.216.172 at 2016-08-18 20:24:04 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"14"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 14], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers]   [1m[36mOpenOption Load (0.3ms)[0m  [1m[34mSELECT "open_options".* FROM "open_options" WHERE "open_options"."question_id" = $1[0m  [["question_id", 14]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (7.93ms)
Completed 200 OK in 10ms (Views: 8.0ms | ActiveRecord: 1.0ms)


  [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT  "options".* FROM "options" ORDER BY "options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mOpenOption Load (0.5ms)[0m  [1m[34mSELECT  "open_options".* FROM "open_options" ORDER BY "open_options"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
  [1m[36mGameOption Load (3.6ms)[0m  [1m[34mSELECT  "game_options".* FROM "game_options" WHERE "game_options"."option_id" = $1 LIMIT $2[0m  [["option_id", 1], ["LIMIT", 1]]
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (120.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_development"[0m
  [1m[35m (118.7ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_test"[0m
  [1m[35m (6.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4881866303549157300);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160812153226)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying, "last_name" character varying, "hometown" character varying, "password_digest" character varying, "tagline" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812153226"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGames (20160812154940)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "games" ("id" serial primary key, "board_id" integer, "user_id" integer, "final_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812154940"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateBoards (20160812155446)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE TABLE "boards" ("id" serial primary key, "topic" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155446"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCategories (20160812155534)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.8ms)[0m  [1m[35mCREATE TABLE "categories" ("id" serial primary key, "board_id" integer, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155534"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateQuestions (20160812155559)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "category_id" integer, "difficulty" integer, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155559"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20160812155644)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "options" ("id" serial primary key, "question_id" integer, "language" character varying, "correct" boolean, "correct_answer" character varying, "content" character varying, "open" boolean DEFAULT 'f', "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155644"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddActiveToQuestions (20160816140611)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.2ms)[0m  [1m[35mALTER TABLE "questions" ADD "active" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160816140611"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddColumn (20160817151549)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "username" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817151549"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveColumn (20160817153321)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "users" DROP "first_name"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153321"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveLastNameFromUsers (20160817153341)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" DROP "last_name"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153341"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddUsernameToEmail (20160817154932)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817154932"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGameOptions (20160817202356)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "game_options" ("id" serial primary key, "game_id" integer, "option_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817202356"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddCorrectToGameOptions (20160818174517)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "game_options" ADD "correct" boolean[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174517"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddErrorToGameOptions (20160818174702)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "game_options" ADD "error" text[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174702"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", :environment], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-08-19 00:55:32 UTC], ["updated_at", 2016-08-19 00:55:32 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT pg_advisory_unlock(4881866303549157300)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (4.2ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'boards'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.6ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'categories'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.0ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'game_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.9ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'games'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.0ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.8ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Simple Expressions"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Loops & Conditionals"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", " Methods & Hashes"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Ruby Questions"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Object Oriented Programming"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "users" ("hometown", "password_digest", "tagline", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["hometown", "philly"], ["password_digest", "flatiron"], ["tagline", "working"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC], ["email", "flatiron"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 1000], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", true], ["content", "xy"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "[3, 5]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "8"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", true], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 3"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = nil\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 4"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", true], ["content", "Otto Mation"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "OttoMation"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "Otto + Mation"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "[\"temp\"]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "temp"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "@temp]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", true], ["content", "[:@temp]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "unicorn"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", true], ["content", "nrocinu"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "nrocinU"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "Nrocinu"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[-1]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", true], ["content", "arr[2]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[3]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[\"biggie\"]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each_with_index do |color, index|\n                                                                                result << [\"color\", \"index\"  + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index] + 1\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each do |color, index|\n                                                                                result << [color, index  + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", true], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index + 1]\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values_at(0, 3)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", true], ["content", "days.select.with_index do |_, index|\n                                                                                [0, 2].include? index\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.select.each_with_index do |_, index|\n                                                                                  [0, 2].include? index\n                                                                                end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values(0, 2)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begin\n                                                                              begin\n                                                                              begin"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begio\n                                                                              begip\n                                                                              begiq"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", true], ["content", "begin\n                                                                              begio\n                                                                              begip"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.values()"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", true], ["content", "lebron.keys()"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys.all"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron.push({:high_school => \"St. Vincent-St. Mary High School\"})"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron(\"high_school\", \"St. Vincent-St. Mary High School\")"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron[:high_school].to_h(St. Vincent-St. Mary High School)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", true], ["content", "lebron[:high_school] = \"St. Vincent-St. Mary High School\""], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", true], ["content", ":firefox"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", ":chrome"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "[:chrome, :favorite]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.sum(1) do |product, number|\n                                                                              product *= number\n                                                                              product\n                                                                            end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", true], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.include do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product * number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [@greeting, @name]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [\"@greeting\", \"@name\"]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", true], ["content", "[]\n                                                                              \"***\"\n                                                                              [:@greeting, :@name]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = 3\n                                                                               d = 4"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", true], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = 5"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = nil\n                                                                               d = 3"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = nil"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Instance variable"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Global variable"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", true], ["content", "Class variable"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "None of the above"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "[10, 30, 50, 70, 90]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[20, 40, 60, 80, 100]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "10, 30, 50, 70, 90"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[\"10\", \"30\", \"50\", \"70\", \"90\"]"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "TypeError: no implicit conversion of String into Integer"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "NameError: undefined local variable or method `lambda' for main:Object"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", true], ["content", "ArgumentError: wrong number of arguments (3 for 2)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "ArgumentError: wrong number of arguments (2 for 1)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "biscuits biscuits biscuits"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "thang"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", true], ["content", "biscuits"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                def init(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", true], ["content", "class Celsius\n                                                                                def initialize(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature = @temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                  def self.add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                end\n                                                                                puts Calculator(3, 4)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  x + y\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", true], ["content", "class Calculator\n                                                                                def self.add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", true], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(:name)\n                                                                                  @age = args.fetch(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args(:name)\n                                                                                  @age = args(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(name)\n                                                                                  @age = args.fetch(age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                  def initialize(args)\n                                                                                    @name = args.fetch(:name)\n                                                                                    @age = args.fetch(:age)\n                                                                                  end\n                                                                                end\n\n                                                                                class Yankees\n                                                                                  def captain\n                                                                                    Person.new(\"Jeter\", 39)\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "hi cat"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "error)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", true], ["content", "cat"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", true], ["content", "error)"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "oink!"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "#Pig:0x007ff24ab73d58"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "language", "correct_answer", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 1], ["language", "RUBY"], ["correct_answer", "6"], ["created_at", 2016-08-19 00:56:05 UTC], ["updated_at", 2016-08-19 00:56:05 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:56:30 -0400
Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 20:56:30 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 19ms (ActiveRecord: 3.9ms)


  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$tuVVrh3qfwnpx55/76GmcuV8RO4hP7BtZ.dXacqcvwYabrwEdSz0a"], ["created_at", 2016-08-19 00:56:30 UTC], ["updated_at", 2016-08-19 00:56:30 UTC], ["email", "test"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 89ms (ActiveRecord: 11.8ms)


Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 20:56:31 -0400
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 20:56:31 -0400
Processing by Api::V1::UsersController#create as HTML
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$1v0DuUsP7w6v6u13VmKJw.pscAuiM4DuTgyw.EvGpMCGIM3Bc019S"], ["created_at", 2016-08-19 00:56:31 UTC], ["updated_at", 2016-08-19 00:56:31 UTC], ["email", "test"]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
  [1m[35m (75.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 151ms (ActiveRecord: 77.2ms)


[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.14ms)
Completed 201 Created in 87ms (Views: 4.7ms | ActiveRecord: 1.9ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 20:56:31 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (1.4ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.27ms)
Completed 200 OK in 50ms (Views: 2.8ms | ActiveRecord: 18.7ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 20:56:33 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.6ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.7ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.44ms)
Completed 200 OK in 126ms (Views: 9.0ms | ActiveRecord: 21.3ms)


Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 20:56:34 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (22.31ms)
Completed 500 Internal Server Error in 43ms (ActiveRecord: 4.0ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 20:57:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (2.39ms)
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.3ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 21:01:32 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (2.47ms)
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.4ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:01:42 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (2.6ms)
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.4ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:02:52 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (24.34ms)
Completed 500 Internal Server Error in 68ms (ActiveRecord: 9.7ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 21:02:56 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (2.91ms)
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.4ms)


  
NameError (uninitialized constant Question::OpenOption):
  
app/controllers/api/v1/questions_controller.rb:7:in `show'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:03:54 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Class (0.14ms)
  [1m[36mCACHE (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 74249ms (Views: 11.0ms | ActiveRecord: 5.4ms)


  
AbstractController::DoubleRenderError (Render and/or redirect were called multiple times in this action. Please note that you may only call render OR redirect, and at most once per action. Also note that neither redirect nor render terminate execution of the action, so if you want to exit an action after redirecting, you need to do something like "redirect_to(...) and return".):
  
app/controllers/api/v1/questions_controller.rb:8:in `show'
Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:05:16 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (50.07ms)
Completed 200 OK in 5120ms (Views: 53.6ms | ActiveRecord: 12.1ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:05:54 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.21ms)
Completed 201 Created in 111ms (Views: 3.7ms | ActiveRecord: 6.5ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:05:55 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (2.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.33ms)
Completed 200 OK in 44ms (Views: 2.3ms | ActiveRecord: 13.4ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:05:57 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.9ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (4.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.32ms)
Completed 200 OK in 153ms (Views: 9.1ms | ActiveRecord: 24.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:06:00 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (53.52ms)
Completed 200 OK in 78ms (Views: 67.6ms | ActiveRecord: 7.3ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:08:14 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.09ms)
Completed 201 Created in 79ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:08:14 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (3.9ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.22ms)
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:08:15 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (3.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (2.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (6.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (2.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (15.89ms)
Completed 200 OK in 61ms (Views: 16.5ms | ActiveRecord: 18.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:08:17 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (5.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (9.77ms)
Completed 200 OK in 14ms (Views: 5.4ms | ActiveRecord: 7.1ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:08:27 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (3.0ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.28ms)
Completed 200 OK in 7ms (Views: 2.3ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:08:29 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.0ms)
Completed 200 OK in 38ms (Views: 8.6ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:08:30 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (4.21ms)
Completed 200 OK in 10ms (Views: 4.7ms | ActiveRecord: 2.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:09:52 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (4.1ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (31.0ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (14.85ms)
Completed 200 OK in 97ms (Views: 17.3ms | ActiveRecord: 38.3ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:09:52 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (5.51ms)
Completed 200 OK in 11ms (Views: 4.8ms | ActiveRecord: 4.0ms)


  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", :environment]]
  [1m[35m (120.1ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_development"[0m
  [1m[35m (118.9ms)[0m  [1m[35mDROP DATABASE IF EXISTS "codeChallenge_test"[0m
  [1m[35m (5.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(4881866303549157300);[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateUsers (20160812153226)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.5ms)[0m  [1m[35mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying, "last_name" character varying, "hometown" character varying, "password_digest" character varying, "tagline" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812153226"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGames (20160812154940)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "games" ("id" serial primary key, "board_id" integer, "user_id" integer, "final_score" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812154940"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateBoards (20160812155446)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "boards" ("id" serial primary key, "topic" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155446"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateCategories (20160812155534)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "categories" ("id" serial primary key, "board_id" integer, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155534"]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateQuestions (20160812155559)
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" serial primary key, "category_id" integer, "difficulty" integer, "content" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155559"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateOptions (20160812155644)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "options" ("id" serial primary key, "question_id" integer, "language" character varying, "correct" boolean, "correct_answer" character varying, "content" character varying, "open" boolean DEFAULT 'f', "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160812155644"]]
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddActiveToQuestions (20160816140611)
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (5.1ms)[0m  [1m[35mALTER TABLE "questions" ADD "active" boolean DEFAULT 't'[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160816140611"]]
  [1m[35m (1.0ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddColumn (20160817151549)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "username" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817151549"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveColumn (20160817153321)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "users" DROP "first_name"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153321"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to RemoveLastNameFromUsers (20160817153341)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.5ms)[0m  [1m[35mALTER TABLE "users" DROP "last_name"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817153341"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddUsernameToEmail (20160817154932)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "users" ADD "email" character varying[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817154932"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to CreateGameOptions (20160817202356)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "game_options" ("id" serial primary key, "game_id" integer, "option_id" integer, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160817202356"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddCorrectToGameOptions (20160818174517)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mALTER TABLE "game_options" ADD "correct" boolean[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174517"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddErrorToGameOptions (20160818174702)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.9ms)[0m  [1m[35mALTER TABLE "game_options" ADD "error" text[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20160818174702"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", :environment], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", 2016-08-19 01:15:00 UTC], ["updated_at", 2016-08-19 01:15:00 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(4881866303549157300)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (5.1ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'boards'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'categories'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (4.9ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'game_options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'games'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'options'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.7ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'questions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.5ms)[0m  [1m[34mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories"[0m
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  [1m[36mGame Load (0.6ms)[0m  [1m[34mSELECT "games".* FROM "games"[0m
  [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options"[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "ruby"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "sql"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "javascript"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "html"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "css"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "boards" ("topic", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["topic", "react"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Simple Expressions"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Loops & Conditionals"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", " Methods & Hashes"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Ruby Questions"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "categories" ("board_id", "name", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["board_id", 1], ["name", "Object Oriented Programming"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 200], ["content", "What does the following expression evaluate to?\n                                                                                  2 ** 3"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 400], ["content", "What does the following code return?\n                                                                                  def add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                  add(3, 5)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 600], ["content", "What are the values of a, b, c and d?\n                                                                                  a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 800], ["content", "What does the following code print?\n\n                                                                                  def first_name()\n                                                                                    return(\"Otto\")\n                                                                                  end\n\n                                                                                  def last_name()\n                                                                                    return(\"Mation\")\n                                                                                  end\n\n                                                                                  def full_name()\n                                                                                    first_name() + \" \" + last_name()\n                                                                                  end\n\n                                                                                  puts full_name()"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 1], ["difficulty", 1000], ["content", "What does the following code print?\n                                                                                    class IceCream\n                                                                                      @temp = \"cold\"\n                                                                                    end\n                                                                                    print IceCream.instance_variables"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 200], ["content", "What does the following code print?\n                                                                                    puts \"unicorn\".reverse()"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 400], ["content", "arr = [\"onyx\", \"wu tang\", \"biggie\", \"tupac\"]\n                                                                                    Get the \"biggie\" string from arr."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 600], ["content", "colors = [\"red\", \"violet\", \"blue\"]\n                                                                                    Use the colors array to construct the following array:\n                                                                                    [[\"red\", 1], [\"violet\", 2], [\"blue\", 3]]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 800], ["content", "days = [\"mon\", \"tues\", \"wed\", \"thur\", \"fri\"]\n                                                                                    Create an array of the elements with indexes 0 and 2. The return value should be [\"mon\", \"wed\"]."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 2], ["difficulty", 1000], ["content", "What  does the following print\n                                                                                    enum = (\"begin\"...\"finish\").to_enum\n                                                                                    print enum.next\n                                                                                    print enum.next\n                                                                                    print enum.next"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 200], ["content", "lebron = {:sport=>\"basketball\", :birthplace=>\"Akron\", :high_school=>\"St. Vincent-St. Mary High School\"}\n                                                                                    Return an array of all the keys in the lebron hash."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 400], ["content", "lebron = {:sport => \"basketball\", :birthplace => \"Akron\"}\n                                                                                      Add the :high_school key to the lebron hash with the value \"St. Vincent-St. Mary High School\"."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 600], ["content", "What does the following code return?\n                                                                                    browsers = {\n                                                                                      :favorite => :chrome,\n                                                                                      :favorite => :firefox,\n                                                                                      :worst => :internet_explorer\n                                                                                    }\n                                                                                    browsers[:favorite]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 800], ["content", "dude = {\n                                                                                      age: 44,\n                                                                                      weight: 250,\n                                                                                      net_worth: 25\n                                                                                    }\n                                                                                    Return the product of all the values in the dude hash (the result should be 44 * 250 * 25 = 275_000)."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 3], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                    h = {}\n                                                                                    class Sublime\n                                                                                      @fav = \"caress me down\"\n                                                                                      def sing(obj)\n                                                                                        obj.instance_variable_set(:@greeting, \"mucho gusto\")\n                                                                                        obj.instance_variable_set(:@name, \"me llamo brad lee\")\n                                                                                      end\n                                                                                    end\n\n                                                                                    s = Sublime.new\n                                                                                    s.sing(h)\n                                                                                    p s.instance_variables\n                                                                                    p \"***\"\n                                                                                    p h.instance_variables"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 200], ["content", "What are the values of a, b, c and d?\n                                                                                    a, (b, *c), d = 1, [2, 3, 4], 5"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 400], ["content", "Variables that start with a capital letter are what kind of variables in Ruby?"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 600], ["content", "What does the following print? print 10.step(100, 20).to_a"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 800], ["content", "what does the following print\n                                                                                      thang = \"biscuits\"\n                                                                                      [1,2,3].each { |n; thang| thang = n }\n                                                                                      puts thang"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 4], ["difficulty", 1000], ["content", "What happens when the following is run?\n                                                                                      Proc.new { |i,j| }.call(1,2,3)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 200], ["content", "Create a Celsius class that is initialized with temperature."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 400], ["content", "Define a Calculator class with an add() class method."], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 600], ["content", "Refactor the following class to remove the argument-order dependency.\n                                                                                     class Person\n                                                                                       def initialize(name, age)\n                                                                                         @name = name\n                                                                                         @age = age\n                                                                                       end\n                                                                                     end\n\n                                                                                     class Yankees\n                                                                                       def captain\n                                                                                         Person.new(\"Jeter\", 39)\n                                                                                       end\n                                                                                     end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 800], ["content", "What does the following code print?\n                                                                                      x = 42\n                                                                                      y = \"cat\"\n                                                                                      b = binding\n                                                                                      def hi(b)\n                                                                                        b.local_variable_get(:y)\n                                                                                      end\n                                                                                      p hi(b)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("category_id", "difficulty", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["category_id", 5], ["difficulty", 1000], ["content", "What does the following code print? Explain.\n                                                                                      class Pig\n                                                                                        protected\n                                                                                        def sound\n                                                                                          \"oink!\"\n                                                                                        end\n                                                                                      end\n\n                                                                                      piggy = Pig.new\n                                                                                      p piggy.sound"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("hometown", "password_digest", "tagline", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["hometown", "philly"], ["password_digest", "flatiron"], ["tagline", "working"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC], ["email", "flatiron"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 1000], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", true], ["content", "xy"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "[3, 5]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 2], ["correct", false], ["content", "8"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", true], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 3"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = nil\n                                                                            c = 3\n                                                                            d = 4"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 3], ["correct", false], ["content", "a = 1\n                                                                            b = 2\n                                                                            c = nil\n                                                                            d = 4"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", true], ["content", "Otto Mation"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "OttoMation"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 4], ["correct", false], ["content", "Otto + Mation"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "[\"temp\"]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "temp"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", false], ["content", "@temp]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 5], ["correct", true], ["content", "[:@temp]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "unicorn"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", true], ["content", "nrocinu"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "nrocinU"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 6], ["correct", false], ["content", "Nrocinu"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[-1]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", true], ["content", "arr[2]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[3]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 7], ["correct", false], ["content", "arr[\"biggie\"]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each_with_index do |color, index|\n                                                                                result << [\"color\", \"index\"  + 1]\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index] + 1\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", false], ["content", "result = []\n                                                                              colors.each do |color, index|\n                                                                                result << [color, index  + 1]\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 8], ["correct", true], ["content", "colors.map.with_index do |color, index|\n                                                                                [color, index + 1]\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values_at(0, 3)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", true], ["content", "days.select.with_index do |_, index|\n                                                                                [0, 2].include? index\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.select.each_with_index do |_, index|\n                                                                                  [0, 2].include? index\n                                                                                end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 9], ["correct", false], ["content", "days.values(0, 2)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begin\n                                                                              begin\n                                                                              begin"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "begio\n                                                                              begip\n                                                                              begiq"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 10], ["correct", true], ["content", "begin\n                                                                              begio\n                                                                              begip"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.values()"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", true], ["content", "lebron.keys()"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 11], ["correct", false], ["content", "lebron.keys.all"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron.push({:high_school => \"St. Vincent-St. Mary High School\"})"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron(\"high_school\", \"St. Vincent-St. Mary High School\")"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", false], ["content", "lebron[:high_school].to_h(St. Vincent-St. Mary High School)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 12], ["correct", true], ["content", "lebron[:high_school] = \"St. Vincent-St. Mary High School\""], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", true], ["content", ":firefox"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", ":chrome"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 13], ["correct", false], ["content", "[:chrome, :favorite]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.sum(1) do |product, number|\n                                                                              product *= number\n                                                                              product\n                                                                            end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", true], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.include do |product, number|\n                                                                                product *= number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 14], ["correct", false], ["content", "dude.values.inject(1) do |product, number|\n                                                                                product * number\n                                                                                product\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [@greeting, @name]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", false], ["content", "[]\n                                                                              \"***\"\n                                                                              [\"@greeting\", \"@name\"]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 15], ["correct", true], ["content", "[]\n                                                                              \"***\"\n                                                                              [:@greeting, :@name]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = 3\n                                                                               d = 4"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", true], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = 5"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = nil\n                                                                               d = 3"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 16], ["correct", false], ["content", "a = 1\n                                                                               b = 2\n                                                                               c = [3, 4]\n                                                                               d = nil"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Instance variable"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "Global variable"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", true], ["content", "Class variable"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 17], ["correct", false], ["content", "None of the above"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "[10, 30, 50, 70, 90]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[20, 40, 60, 80, 100]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", true], ["content", "10, 30, 50, 70, 90"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 18], ["correct", false], ["content", "[\"10\", \"30\", \"50\", \"70\", \"90\"]"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "TypeError: no implicit conversion of String into Integer"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "NameError: undefined local variable or method `lambda' for main:Object"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", true], ["content", "ArgumentError: wrong number of arguments (3 for 2)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 20], ["correct", false], ["content", "ArgumentError: wrong number of arguments (2 for 1)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "biscuits biscuits biscuits"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "error"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", false], ["content", "thang"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 19], ["correct", true], ["content", "biscuits"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                def init(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", true], ["content", "class Celsius\n                                                                                def initialize(temperature)\n                                                                                  @temperature = temperature\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 21], ["correct", false], ["content", "class Celsius\n                                                                                  def initialize(temperature)\n                                                                                    temperature = @temperature\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                  def self.add(x, y)\n                                                                                    return(x + y)\n                                                                                  end\n                                                                                end\n                                                                                puts Calculator(3, 4)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  x + y\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", false], ["content", "class Calculator\n                                                                                def add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 22], ["correct", true], ["content", "class Calculator\n                                                                                def self.add(x, y)\n                                                                                  return(x + y)\n                                                                                end\n                                                                              end\n\n                                                                              puts Calculator.add(3, 4)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", true], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(:name)\n                                                                                  @age = args.fetch(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args(:name)\n                                                                                  @age = args(:age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                def initialize(args)\n                                                                                  @name = args.fetch(name)\n                                                                                  @age = args.fetch(age)\n                                                                                end\n                                                                              end\n\n                                                                              class Yankees\n                                                                                def captain\n                                                                                  Person.new({ name: \"Jeter\", age: 39 })\n                                                                                end\n                                                                              end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 23], ["correct", false], ["content", "class Person\n                                                                                  def initialize(args)\n                                                                                    @name = args.fetch(:name)\n                                                                                    @age = args.fetch(:age)\n                                                                                  end\n                                                                                end\n\n                                                                                class Yankees\n                                                                                  def captain\n                                                                                    Person.new(\"Jeter\", 39)\n                                                                                  end\n                                                                                end"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "hi cat"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "error)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", true], ["content", "cat"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 24], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "nil"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", true], ["content", "error)"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "oink!"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "correct", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["question_id", 25], ["correct", false], ["content", "#Pig:0x007ff24ab73d58"], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "options" ("question_id", "language", "correct_answer", "open", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["question_id", 1], ["language", "RUBY"], ["correct_answer", "6"], ["open", true], ["created_at", 2016-08-19 01:15:06 UTC], ["updated_at", 2016-08-19 01:15:06 UTC]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:16:40 -0400
Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 21:16:40 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
Processing by Api::V1::UsersController#create as HTML
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
  [1m[36mUser Load (79.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
Completed 404 Not Found in 101ms (ActiveRecord: 83.6ms)


  [1m[35m (0.7ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$Bg3rox2jsbLLT6IEQeqc4.zyYSSfpo8vBurvhNgDaMdV85e9Hww2."], ["created_at", 2016-08-19 01:16:41 UTC], ["updated_at", 2016-08-19 01:16:41 UTC], ["email", "test"]]
  [1m[35m (0.5ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 90ms (ActiveRecord: 13.3ms)


Started POST "/api/v1/users" for 85.65.216.172 at 2016-08-18 21:16:41 -0400
Processing by Api::V1::UsersController#create as HTML
Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:16:41 -0400
  Parameters: {"email"=>"test", "password"=>"[FILTERED]", "user"=>{"email"=>"test"}}
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("password_digest", "created_at", "updated_at", "email") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["password_digest", "$2a$10$5ZHDxNUaV/xuD1zPQfJyw.QpWl.cIx5dJMM7doyhCi/s1i40L8POq"], ["created_at", 2016-08-19 01:16:41 UTC], ["updated_at", 2016-08-19 01:16:41 UTC], ["email", "test"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 78ms (ActiveRecord: 1.4ms)


  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.15ms)
Completed 201 Created in 89ms (Views: 4.0ms | ActiveRecord: 2.0ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:16:41 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.2ms)
Completed 200 OK in 32ms (Views: 1.7ms | ActiveRecord: 11.1ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:16:43 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.7ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (1.1ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (3.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (6.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (7.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.38ms)
Completed 200 OK in 145ms (Views: 10.0ms | ActiveRecord: 34.0ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:16:47 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (25.32ms)
Completed 200 OK in 47ms (Views: 38.2ms | ActiveRecord: 5.6ms)


Started GET "/api/v1/questions/2" for 85.65.216.172 at 2016-08-18 21:17:20 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 2]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (4.54ms)
Completed 200 OK in 7ms (Views: 4.7ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/7" for 85.65.216.172 at 2016-08-18 21:17:29 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"7"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 7], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 7]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.51ms)
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/questions/13" for 85.65.216.172 at 2016-08-18 21:17:34 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.6ms)
Completed 200 OK in 6ms (Views: 3.7ms | ActiveRecord: 0.7ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 21:17:37 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>200}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (6.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 200], ["created_at", 2016-08-19 01:17:37 UTC], ["updated_at", 2016-08-19 01:17:37 UTC]]
  [1m[35m (6.5ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 2], ["option_id", 2], ["created_at", 2016-08-19 01:17:37 UTC], ["updated_at", 2016-08-19 01:17:37 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 2], ["option_id", 22], ["created_at", 2016-08-19 01:17:37 UTC], ["updated_at", 2016-08-19 01:17:37 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 124ms (ActiveRecord: 26.2ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 21:17:56 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>200}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>47, "correct"=>false, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.5ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 200], ["created_at", 2016-08-19 01:17:56 UTC], ["updated_at", 2016-08-19 01:17:56 UTC]]
  [1m[35m (6.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 2], ["created_at", 2016-08-19 01:17:56 UTC], ["updated_at", 2016-08-19 01:17:56 UTC], ["correct", true]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 22], ["created_at", 2016-08-19 01:17:56 UTC], ["updated_at", 2016-08-19 01:17:56 UTC], ["correct", true]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.6ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 3], ["option_id", 47], ["created_at", 2016-08-19 01:17:56 UTC], ["updated_at", 2016-08-19 01:17:56 UTC], ["correct", false]]
  [1m[35m (0.8ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 46ms (ActiveRecord: 20.7ms)


Started GET "/api/v1/questions/13" for 85.65.216.172 at 2016-08-18 21:17:56 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"13"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 13], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 13]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (6.49ms)
Completed 200 OK in 10ms (Views: 6.8ms | ActiveRecord: 1.0ms)


Started POST "/api/v1/game_options/" for 85.65.216.172 at 2016-08-18 21:17:57 -0400
Processing by Api::V1::GameOptionsController#create as HTML
  Parameters: {"boardInfo"=>{"userId"=>1, "boardId"=>"1", "score"=>200}, "optionsInfo"=>[{"optionId"=>2, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>22, "correct"=>true, "userId"=>1, "error"=>nil}, {"optionId"=>47, "correct"=>false, "userId"=>1, "error"=>nil}], "game_option"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "games" ("board_id", "user_id", "final_score", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["board_id", 1], ["user_id", 1], ["final_score", 200], ["created_at", 2016-08-19 01:17:57 UTC], ["updated_at", 2016-08-19 01:17:57 UTC]]
  [1m[35m (7.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.7ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.9ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 2], ["created_at", 2016-08-19 01:17:57 UTC], ["updated_at", 2016-08-19 01:17:57 UTC], ["correct", true]]
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 22], ["created_at", 2016-08-19 01:17:57 UTC], ["updated_at", 2016-08-19 01:17:57 UTC], ["correct", true]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "game_options" ("game_id", "option_id", "created_at", "updated_at", "correct") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["game_id", 4], ["option_id", 47], ["created_at", 2016-08-19 01:17:57 UTC], ["updated_at", 2016-08-19 01:17:57 UTC], ["correct", false]]
  [1m[35m (3.7ms)[0m  [1m[35mCOMMIT[0m
Completed 204 No Content in 50ms (ActiveRecord: 29.7ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:18:14 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (1.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (11.34ms)
Completed 200 OK in 36ms (Views: 12.1ms | ActiveRecord: 5.4ms)


Started GET "/api/v1/questions/11" for 85.65.216.172 at 2016-08-18 21:20:11 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"11"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 11], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.8ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 11]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (5.84ms)
Completed 200 OK in 9ms (Views: 6.3ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:20:16 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.7ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.7ms)
Completed 200 OK in 6ms (Views: 3.6ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:21:57 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (11.36ms)
Completed 200 OK in 32ms (Views: 12.1ms | ActiveRecord: 3.6ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:22:06 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.07ms)
Completed 201 Created in 76ms (Views: 0.6ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:22:06 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (5.3ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.24ms)
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:22:07 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (1.2ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.6ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (6.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (3.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (1.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (14.96ms)
Completed 200 OK in 57ms (Views: 15.6ms | ActiveRecord: 18.6ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:22:08 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.5ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.76ms)
Completed 200 OK in 7ms (Views: 4.6ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:22:30 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.2ms)
Completed 200 OK in 25ms (Views: 7.7ms | ActiveRecord: 2.9ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:22:32 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.6ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.85ms)
Completed 200 OK in 7ms (Views: 4.0ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:22:48 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.7ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (3.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (9.77ms)
Completed 200 OK in 39ms (Views: 10.6ms | ActiveRecord: 8.4ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:23:09 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (7.69ms)
Completed 200 OK in 26ms (Views: 8.2ms | ActiveRecord: 2.8ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:23:10 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.87ms)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 1.3ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:24:32 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.5ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (12.9ms)
Completed 200 OK in 37ms (Views: 13.5ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:24:35 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.1ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (4.58ms)
Completed 200 OK in 7ms (Views: 4.2ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:25:29 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.5ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (14.43ms)
Completed 200 OK in 43ms (Views: 15.3ms | ActiveRecord: 7.2ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:25:31 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.3ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.64ms)
Completed 200 OK in 7ms (Views: 4.1ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:26:14 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.4ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.4ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.5ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (4.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (8.96ms)
Completed 200 OK in 39ms (Views: 9.8ms | ActiveRecord: 8.1ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:26:16 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (0.4ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (3.88ms)
Completed 200 OK in 6ms (Views: 4.3ms | ActiveRecord: 0.6ms)


Started POST "/knock/auth_token" for 85.65.216.172 at 2016-08-18 21:28:30 -0400
Processing by Knock::AuthTokenController#create as */*
  Parameters: {"auth"=>{"email"=>"test", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "test"], ["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Knock::AuthToken (0.08ms)
Completed 201 Created in 73ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/boards" for 85.65.216.172 at 2016-08-18 21:28:30 -0400
Processing by Api::V1::BoardsController#index as HTML
  [1m[36mBoard Load (2.1ms)[0m  [1m[34mSELECT "boards".* FROM "boards"[0m
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.49ms)
Completed 200 OK in 5ms (Views: 1.2ms | ActiveRecord: 2.1ms)


Started GET "/api/v1/boards/1" for 85.65.216.172 at 2016-08-18 21:28:32 -0400
Processing by Api::V1::BoardsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mBoard Load (0.3ms)[0m  [1m[34mSELECT  "boards".* FROM "boards" WHERE "boards"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mCategory Load (0.3ms)[0m  [1m[34mSELECT "categories".* FROM "categories" WHERE "categories"."board_id" = $1[0m  [["board_id", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mQuestion Load (8.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 1]]
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 2]]
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 3]]
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 4]]
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."category_id" = $1[0m  [["category_id", 5]]
  [1m[36mUser Load (3.1ms)[0m  [1m[34mSELECT  "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT $1[0m  [["LIMIT", 1]]
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (13.64ms)
Completed 200 OK in 59ms (Views: 14.3ms | ActiveRecord: 17.8ms)


Started GET "/api/v1/questions/1" for 85.65.216.172 at 2016-08-18 21:28:33 -0400
Processing by Api::V1::QuestionsController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
[active_model_serializers]   [1m[36mOption Load (1.9ms)[0m  [1m[34mSELECT "options".* FROM "options" WHERE "options"."question_id" = $1[0m  [["question_id", 1]]
[active_model_serializers] Rendered QuestionSerializer with ActiveModelSerializers::Adapter::Attributes (5.4ms)
Completed 200 OK in 8ms (Views: 4.3ms | ActiveRecord: 2.2ms)


Started POST "/api/v1/assesOpenOption" for 85.65.216.172 at 2016-08-18 21:28:35 -0400
Processing by Api::V1::OptionsController#asses as HTML
  Parameters: {"userAnswer"=>"6", "correcAnswer"=>"6", "option"=>{}}
[active_model_serializers] Rendered ActiveModel::Serializer::Null with Hash (0.2ms)
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.0ms)


